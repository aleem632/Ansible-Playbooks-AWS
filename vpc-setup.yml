- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC variable
      include_vars: ./vpc_setup

    - name: Create vprofile VPC
      ec2_vpc_net:
       name: "{{vpc_name}}"
       cidr_block: "{{vpcCidr}}"
       region: "{{region}}"
       tenancy: default
       state: "{{state}}"
      register: vpcout

    - debug:
       var: vpcout

    - name: Creating subnet1
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{region}}"
              az: "{{zone1}}"
              state: "{{state}}"
              cidr: "{{PubSub1Cidr}}"
              map_public: yes
              resource_tags:
               Name:  pubsub1
      register: pubsub1_out

    - name: Creating subnet2
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{region}}"
              az: "{{zone2}}"
              state: "{{state}}"
              cidr: "{{PubSub2Cidr}}"
              map_public: yes
              resource_tags:
               Name:  pubsub2
      register: pubsub2_out

    - name: Creating subnet3
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{region}}"
              az: "{{zone3}}"
              state: "{{state}}"
              cidr: "{{PubSub3Cidr}}"
              map_public: yes
              resource_tags:
               Name:  pubsub3
      register: pubsub3_out

    - name: Creating private subnet 1
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{region}}"
              az: "{{zone1}}"
              state: "{{state}}"
              cidr: "{{PrivSub1Cidr}}"
              resource_tags:
               Name:  privsub1
      register: privsub1_out

    - name: Creating private subnet 2
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{region}}"
              az: "{{zone2}}"
              state: "{{state}}"
              cidr: "{{PrivSub2Cidr}}"
              resource_tags:
               Name:  privsub2
      register: privsub2_out

      
    - name: Creating private subnet 3
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{region}}"
              az: "{{zone3}}"
              state: "{{state}}"
              cidr: "{{PrivSub3Cidr}}"
              resource_tags:
               Name:  privsub3
      register: privsub3_out

    - name: Creating Internet Gateway
      ec2_vpc_igw:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{region}}"
              state: "{{state}}"
              resource_tags:
               Name:  vprofile-IGW
      register: igw_out

    - name: Creating Route tables for public subnet
      ec2_vpc_route_table:
              vpc_id: "{{vpcout.vpc.id}}" 
              region: "{{region}}"
              tags:
               Name: Vprfile-RT
              subnets:
               - "{{pubsub1_out.subnet.id}}"
               - "{{pubsub2_out.subnet.id}}"
               - "{{pubsub3_out.subnet.id}}"
              routes:
               - dest: 0.0.0.0/0
                 gateway_id: "{{igw_out.gateway_id}}"
      register: PubRT_out 

    - name: Creating a nat gate and assigning a elastic IP
      ec2_vpc_nat_gateway:
              state: "{{state}}"
              subnet_id: "{{pubsub1_out.subnet.id}}"
              wait: yes
              region: "{{region}}"
              if_exist_do_not_create: true
      register: natGW_out

    - name: Creating Route tables for Private subnet
      ec2_vpc_route_table:
              vpc_id: "{{vpcout.vpc.id}}" 
              region: "{{region}}"
              tags:
               Name: private-Vprfile-RT
              subnets:
               - "{{privsub1_out.subnet.id}}"
               - "{{privsub2_out.subnet.id}}"
               - "{{privsub3_out.subnet.id}}"
              routes:
               - dest: 0.0.0.0/0
                 gateway_id: "{{natGW_out.nat_gateway_id}}"
      register: PrivRT_out

    - debug:
       var: "{{item}}"
      loop:
       - vpcout.vpc.id
       - pubsub1_out.subnet.id
       - pubsub2_out.subnet.id
       - pubsub3_out.subnet.id
       - privsub1_out.subnet.id
       - privsub2_out.subnet.id
       - privsub3_out.subnet.id
       - igw_out.gateway_id
       - PubRT_out.route_table.id
       - natGW_out.nat_gateway_id
       - PrivRT_out.route_table.id

    - set_fact:
       vpc_id: "{{vpcout.vpc.id}}"
       pubsub1_id: "{{pubsub1_out.subnet.id}}"
       pubsub2_id: "{{pubsub2_out.subnet.id}}"
       pubsub3_id: "{{pubsub3_out.subnet.id}}"
       privsub1_id: "{{privsub1_out.subnet.id}}"
       privsub2_id: "{{privsub2_out.subnet.id}}"
       privsub3_id: "{{privsub3_out.subnet.id}}"
       igw_id: "{{igw_out.gateway_id}}"
       pubRT_id: "{{PubRT_out.route_table.id}}"
       nat_id: "{{natGW_out.nat_gateway_id}}"
       privRT_id: "{{PrivRT_out.route_table.id}}" 
       cacheable: yes 

    - name: copy the variables in a file
      copy:
       content: "vpc_id: {{vpcout.vpc.id}}\npubsub1_id: {{pubsub1_out.subnet.id}}\npubsub2_id: {{pubsub2_out.subnet.id}}\npubsub3_id: {{pubsub3_out.subnet.id}}\nprivsub1_id: {{privsub1_out.subnet.id}}\nprivsub2_id: {{privsub2_out.subnet.id}}\nprivsub3_id: {{privsub3_out.subnet.id}}\n  igw_id: {{igw_out.gateway_id}}\n pubRT_id: {{PubRT_out.route_table.id}}\nnat_id: {{natGW_out.nat_gateway_id}}\nprivRT_id: {{PrivRT_out.route_table.id}}"    
       dest: ./output_vars         
              
              